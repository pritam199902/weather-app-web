[{"C:\\Users\\PritaM\\Desktop\\Program\\MyProject\\WeatherApp\\weather_app\\src\\index.js":"1","C:\\Users\\PritaM\\Desktop\\Program\\MyProject\\WeatherApp\\weather_app\\src\\App.js":"2","C:\\Users\\PritaM\\Desktop\\Program\\MyProject\\WeatherApp\\weather_app\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":14340,"mtime":1611058669010,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1esopps",{"filePath":"11","messages":"12","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\PritaM\\Desktop\\Program\\MyProject\\WeatherApp\\weather_app\\src\\index.js",[],["16","17"],"C:\\Users\\PritaM\\Desktop\\Program\\MyProject\\WeatherApp\\weather_app\\src\\App.js",["18","19","20","21","22","23","24","25"],"import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nimport { bounce, fadeInDown, fadeInUp, fadeOutUp } from \"react-animations\";\r\nimport { StyleSheet, css } from \"aphrodite\";\r\n\r\n////////////////////////////////////////////////////////////////\r\nfunction App() {\r\n  ///////////////\r\n  ////////////////////////////////////\r\n  const [unit, setUnit] = useState(\"C\");\r\n  const [q, setQ] = useState(\"\");\r\n  const [data, setData] = useState(null);\r\n  const [isShowEdit, setIsShowEdit] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [CurrentDateTime, setCurrentDateTime] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n  });\r\n  ///''///////////////////////////////////\r\n  const API_KEY = \"ff05f8c09dfd8d8f97450980f607a648\";\r\n  const API_URI = `https://api.openweathermap.org/data/2.5/weather?q=${q}&appid=${API_KEY}`;\r\n  ///////////////////\r\n  const testData = {\r\n    coord: { lon: 88.2667, lat: 24.1833 },\r\n    weather: [\r\n      { id: 800, main: \"Clear\", description: \"clear sky\", icon: \"01d\" },\r\n    ],\r\n    base: \"stations\",\r\n    main: {\r\n      temp: 300.96,\r\n      feels_like: 297.68,\r\n      temp_min: 300.96,\r\n      temp_max: 300.96,\r\n      pressure: 1011,\r\n      humidity: 27,\r\n      sea_level: 1011,\r\n      grnd_level: 1008,\r\n    },\r\n    visibility: 10000,\r\n    wind: { speed: 3.72, deg: 287 },\r\n    clouds: { all: 2 },\r\n    dt: 1610443627,\r\n    sys: { country: \"IN\", sunrise: 1610412724, sunset: 1610451472 },\r\n    timezone: 19800,\r\n    id: 1262412,\r\n    name: \"Murshidābād\",\r\n    cod: 200,\r\n  };\r\n\r\n  // functions\r\n  const realTime = (epc) => {\r\n    const myDate = new Date(epc * 1000);\r\n    const a = myDate.toLocaleString();\r\n    const b = a.split(\",\");\r\n    const dateStr = b[1].replace(\" \", \"\");\r\n    // alert(dateStr);\r\n    return dateStr;\r\n  };\r\n\r\n  // realTime(data.sys.sunrise);\r\n\r\n  // celcious\r\n  const changeToC = (klvn) => {\r\n    const c = (klvn - 273.15).toFixed(1);\r\n    return c;\r\n  };\r\n\r\n  // farenhite\r\n  const changeToF = (klvn) => {\r\n    const f = ((klvn - 273.15) * (9 / 5) + 32).toFixed(1);\r\n    return f;\r\n  };\r\n\r\n  // 1 hPa = 0.000987 atm\r\n  const changeToAtm = (hPa) => {\r\n    const atm = Number(hPa) * 0.000987;\r\n    return atm.toFixed(1);\r\n  };\r\n\r\n  const Refresh = () => {\r\n    setData(null);\r\n    CALL_API();\r\n  };\r\n\r\n  const setIcon = () => {\r\n    const iconCode = data && data.weather[0].icon;\r\n    // icon url\r\n    const iconUrl = \"http://openweathermap.org/img/wn/\" + iconCode + \".png\";\r\n    return iconUrl;\r\n  };\r\n\r\n  // handle city edit\r\n  const handleCityText = (e) => {\r\n    // console.log(e.target.value);\r\n    setIsError(false);\r\n    setIsLoading(false);\r\n    setQ(e.target.value);\r\n  };\r\n  // change city\r\n  const changeCity = () => {\r\n    // console.log(q);\r\n    if (q.length > 1) {\r\n      setData();\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n      CALL_API();\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  // call api\r\n  const CALL_API = () => {\r\n    fetch(API_URI)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"res data \", data);\r\n        if (data.cod === 200) {\r\n          setData(data);\r\n          setIsShowEdit(true);\r\n          setIsLoading(false);\r\n          const date = new Date().toLocaleDateString();\r\n          const time = new Date().toLocaleTimeString();\r\n          setCurrentDateTime({ date, time });\r\n        } else {\r\n          setIsShowEdit(true);\r\n          setIsLoading(false);\r\n          setIsError(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsShowEdit(true);\r\n        setIsLoading(false);\r\n        setIsError(true);\r\n      });\r\n  };\r\n\r\n  // COMPONENTS\r\n\r\n  const navbar = () => {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <h3 className=\"text-center m-auto\">\r\n         <img style={{height: 50 , paddingRight : 20}} src=\"https://purepng.com/public/uploads/large/purepng.com-weather-iconsymbolsiconsapple-iosiosios-8-iconsios-8-721522596142qx4ep.png\" />\r\n          WEATHER APP\r\n        </h3>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const NoDataFound = () => {\r\n    return (\r\n      <div className={(\"row\", css(styles.bounce))} style={{ marginTop: 35 }}>\r\n        <div className=\"col text-center\">\r\n          {q.length < 1 ? (\r\n            <h5 className=\"text-danger\">Please enter your city or place!</h5>\r\n          ) : (\r\n            <h5 className=\"text-danger\">\r\n              No data found about <strong>{q}</strong>!\r\n            </h5>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //  loadng\r\n  const Loading = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col text-center \">\r\n          <ReactLoading type=\"bars\" color=\"#f38ad\" className=\"m-auto pt-5\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const searchCity = () => {\r\n    return (\r\n      <div className={(\"row\", css(styles.bounce))}>\r\n        <div className=\"col-lg-8 col-md-9 m-auto\">\r\n          <div className=\"card mt-2 \">\r\n            <div className=\"card-body mt-2 pt-1 text-center\">\r\n              <h5>\r\n                <b>Search Your City Here</b>\r\n              </h5>\r\n              <div\r\n                className=\"row px-4 pt-2 m-auto\"\r\n                style={{ justifyContent: \"center\" }}\r\n              >\r\n                <div className=\"col-lg-9 col-md-9 col-10\">\r\n                  <div className=\"form-group m-auto\">\r\n                    <input\r\n                      className=\"form-control \"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter place..\"\r\n                      id=\"inputLarge\"\r\n                      value={q}\r\n                      onChange={(e) => {\r\n                        handleCityText(e);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-1 px-0\">\r\n                  <button\r\n                    className=\"btn btn-primary float-left\"\r\n                    onClick={() => {\r\n                      changeCity();\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-search\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const result = () => {\r\n    return (\r\n      <div>\r\n        <div className={(\"row\", css(styles.bounceLate))}>\r\n          <div className=\"col-lg-8 col-md-9 m-auto\">\r\n            <div className=\"card mt-2 \">\r\n              <div className=\"card-body mt-2 pb-1 pt-1 text-center\">\r\n                {/*  */}\r\n                <div className={(\"row\", css(styles.bounce))}>\r\n                  <div className=\"col text-center\">\r\n                    <h4>\r\n                      <b>\r\n                        {data.name},{data.sys.country}\r\n                      </b>{\" \"}\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"col text-center \">\r\n                    <h5 className=\"text-secondary mb-0\">\r\n                      {CurrentDateTime.date} || {CurrentDateTime.time}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"row\">\r\n                  <div className=\"col \">\r\n                    <h4 className=\"mb-0\">\r\n                      <img src={setIcon()} />\r\n                      <b>{data.weather[0].description}</b>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"row  \" style={{ justifyContent: \"center\" }}>\r\n                  <div className=\"col\">\r\n                    <h2\r\n                      className={(css(styles.bounceLate2), \"mb-0\")}\r\n                      style={{ fontSize: 56, fontWeight: \"800\" }}\r\n                    >\r\n                      {unit === \"C\"\r\n                        ? changeToC(data.main.temp)\r\n                        : changeToF(data.main.temp)}\r\n                      &deg;{unit}\r\n                    </h2>\r\n                    {/*  */}\r\n                    <div\r\n                      className=\"btn-group btn-group-toggle\"\r\n                      data-toggle=\"buttons\"\r\n                    >\r\n                      <label\r\n                        className={\r\n                          unit === \"C\"\r\n                            ? \"btn btn-outline-primary active\"\r\n                            : \"btn btn-outline-primar\"\r\n                        }\r\n                        onClick={() => {\r\n                          setUnit(\"C\");\r\n                        }}\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"options\"\r\n                          id=\"option1\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        &deg;C\r\n                      </label>\r\n                      <label\r\n                        className={\r\n                          unit === \"F\"\r\n                            ? \"btn btn-outline-primary active\"\r\n                            : \"btn btn-outline-primar\"\r\n                        }\r\n                        onClick={() => {\r\n                          setUnit(\"F\");\r\n                        }}\r\n                      >\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"options\"\r\n                          id=\"option2\"\r\n                          autoComplete=\"off\"\r\n                        />\r\n                        &deg;F\r\n                      </label>\r\n                    </div>\r\n                    {/*  */}\r\n                  </div>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"row\">\r\n                  <div className=\"col text-center\">\r\n                    <h5 className=\"mb-0\">\r\n                      Min:{\" \"}\r\n                      {unit === \"C\"\r\n                        ? changeToC(data.main.temp_min)\r\n                        : changeToF(data.main.temp_min)}\r\n                      &deg;{unit}\r\n                    </h5>\r\n                  </div>\r\n                  <div className=\"col text-center \">\r\n                    <h5 className=\" mb-0\">\r\n                      Max:{\" \"}\r\n                      {unit === \"C\"\r\n                        ? changeToC(data.main.temp_max)\r\n                        : changeToF(data.main.temp_min)}\r\n                      &deg;{unit}\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n                {/*  */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/*  */}\r\n        <div className={(\"row\", css(styles.bounceLate2))}>\r\n          <div className=\"\">\r\n            <div className=\"col-lg-8 col-md-9 m-auto\">\r\n              <div className=\"card mt-2 \">\r\n                <div className=\"card-body py-1 \">\r\n                  {/* sunrise */}\r\n                  <div className={\"row\"}>\r\n                    <div className=\"col\">\r\n                      <h4>Sunrise</h4>\r\n                    </div>\r\n                    <div className=\"col text-right \">\r\n                      <h4 className=\"text-secondary\">\r\n                        {realTime(data.sys.sunrise)}\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                  {/*  */}\r\n                  {/* sunrise */}\r\n                  <div className={\"row\"}>\r\n                    <div className=\"col\">\r\n                      <h4>Sunset</h4>\r\n                    </div>\r\n                    <div className=\"col text-right \">\r\n                      <h4 className=\"text-secondary\">\r\n                        {realTime(data.sys.sunset)}\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                  {/*  */}\r\n                  {/* cloud */}\r\n                  <div className={\"row\"}>\r\n                    <div className=\"col\">\r\n                      <h4>Cloud</h4>\r\n                    </div>\r\n                    <div className=\"col text-right \">\r\n                      <h4 className=\"text-secondary\">{data.clouds.all}%</h4>\r\n                    </div>\r\n                  </div>\r\n                  {/*  */}\r\n                  <div className={\"row\"}>\r\n                    <div className=\"col\">\r\n                      <h4>Wind</h4>\r\n                    </div>\r\n                    <div className=\"col text-right \">\r\n                      <h4 className=\"text-secondary\">{data.wind.speed} m/s</h4>\r\n                    </div>\r\n                  </div>\r\n                  {/*  */}\r\n                  <div className={\"row\"}>\r\n                    <div className=\"col\">\r\n                      <h4>Humidity</h4>\r\n                    </div>\r\n                    <div className=\"col text-right \">\r\n                      <h4 className=\"text-secondary\">{data.main.humidity} %</h4>\r\n                    </div>\r\n                  </div>\r\n                  {/*  */}\r\n                  <div className={\"row\"}>\r\n                    <div className=\"col\">\r\n                      <h4>Pressure</h4>\r\n                    </div>\r\n                    <div className=\"col text-right \">\r\n                      <h4 className=\"text-secondary\">\r\n                        {changeToAtm(data.main.pressure)} atm\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                  {/*  */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/*  */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   CALL_API();\r\n  // }, []);\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  return (\r\n    <div className=\"\">\r\n      {navbar()}\r\n      {isShowEdit && searchCity()}\r\n      {isLoading && Loading()}\r\n      {isError && NoDataFound()}\r\n      {data && result()}\r\n    </div>\r\n  );\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////\r\nconst styles = StyleSheet.create({\r\n  bounce: {\r\n    animationName: fadeInDown,\r\n    animationDuration: \"0.6s\",\r\n  },\r\n  bounceLate: {\r\n    animationName: fadeInDown,\r\n    animationDuration: \"1s\",\r\n  },\r\n  bounceLate2: {\r\n    animationName: fadeInDown,\r\n    animationDuration: \"1.2s\",\r\n  },\r\n});\r\n\r\nexport default App;\r\n","C:\\Users\\PritaM\\Desktop\\Program\\MyProject\\WeatherApp\\weather_app\\src\\reportWebVitals.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":2,"column":20,"nodeType":"32","messageId":"33","endLine":2,"endColumn":29},{"ruleId":"30","severity":1,"message":"34","line":5,"column":10,"nodeType":"32","messageId":"33","endLine":5,"endColumn":16},{"ruleId":"30","severity":1,"message":"35","line":5,"column":30,"nodeType":"32","messageId":"33","endLine":5,"endColumn":38},{"ruleId":"30","severity":1,"message":"36","line":5,"column":40,"nodeType":"32","messageId":"33","endLine":5,"endColumn":49},{"ruleId":"30","severity":1,"message":"37","line":26,"column":9,"nodeType":"32","messageId":"33","endLine":26,"endColumn":17},{"ruleId":"30","severity":1,"message":"38","line":83,"column":9,"nodeType":"32","messageId":"33","endLine":83,"endColumn":16},{"ruleId":"39","severity":1,"message":"40","line":147,"column":10,"nodeType":"41","endLine":147,"endColumn":192},{"ruleId":"39","severity":1,"message":"40","line":252,"column":23,"nodeType":"41","endLine":252,"endColumn":46},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'bounce' is defined but never used.","'fadeInUp' is defined but never used.","'fadeOutUp' is defined but never used.","'testData' is assigned a value but never used.","'Refresh' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]